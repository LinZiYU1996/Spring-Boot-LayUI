<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lin.mapper.RegisterLogMapper" >


  <resultMap id="BaseResultMap" type="com.lin.entity.RegisterLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="register_user_name" property="registerUserName" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, register_user_name, register_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from register_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from register_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lin.entity.RegisterLog" >
    insert into register_log (id, register_user_name, register_time
      )
    values (#{id,jdbcType=INTEGER}, #{registerUserName,jdbcType=VARCHAR}, #{registerTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lin.entity.RegisterLog" >
    insert into register_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="registerUserName != null" >
        register_user_name,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="registerUserName != null" >
        #{registerUserName,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lin.entity.RegisterLog" >
    update register_log
    <set >
      <if test="registerUserName != null" >
        register_user_name = #{registerUserName,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lin.entity.RegisterLog" >
    update register_log
    set register_user_name = #{registerUserName,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="saveRegisterLog" parameterType="com.lin.entity.RegisterLog">
    INSERT INTO register_log(register_user_name,register_time) VALUES (#{registerUserName},#{registerTime})
  </insert>
  
  <select id="getAllRegisterLog" resultMap="BaseResultMap">
    SELECT * FROM register_log
  </select>
</mapper>